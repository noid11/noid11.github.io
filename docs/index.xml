<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>noid11.github.io</title>
    <link>https://noid11.github.io/</link>
    <description>Recent content on noid11.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>&amp;#169; noid11</copyright>
    <lastBuildDate>Tue, 19 Jan 2021 22:16:16 +0900</lastBuildDate><atom:link href="https://noid11.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RDP を使って Mac から Windows にファイルをコピーする方法</title>
      <link>https://noid11.github.io/posts/how-to-file-copy-to-windows-from-mac-by-rdp/</link>
      <pubDate>Tue, 19 Jan 2021 22:16:16 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/how-to-file-copy-to-windows-from-mac-by-rdp/</guid>
      <description>クリップボードにコピーして貼り付るのが手軽で良い Mac 側でコピーしたいファイルを選択し、クリップボードにコピー RDP で Windows に接続し、ファイルを送信した</description>
    </item>
    
    <item>
      <title>PowerShell を使って Windows アカウントユーザーのパスワード失効を無効化する方法</title>
      <link>https://noid11.github.io/posts/enable-user-password-never-expires-at-windows/</link>
      <pubDate>Tue, 19 Jan 2021 16:11:20 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/enable-user-password-never-expires-at-windows/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Windows Server で特定ユーザーのパスワード失効を無効化したい場合に便利&lt;/li&gt;
&lt;li&gt;デフォルトでは一定期間でローテートするような設定なので、セキュリティに注意した上で使おう&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>PowerShell を使って Google Chrome をインストールする方法</title>
      <link>https://noid11.github.io/posts/chrome-install-by-powershell/</link>
      <pubDate>Tue, 19 Jan 2021 15:12:28 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/chrome-install-by-powershell/</guid>
      <description>&lt;p&gt;Windows Server 構築で毎回 Internet Explorer の設定を変える・・・みたいな作業が減るので便利&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows の情報を PowerShell から確認する方法</title>
      <link>https://noid11.github.io/posts/view-windows-info/</link>
      <pubDate>Tue, 19 Jan 2021 14:24:03 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/view-windows-info/</guid>
      <description>&lt;p&gt;Windows Server のバージョン情報を PowerShell から確認する方法を調べたメモ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kinesis Data Streams のコンシューマーとして動かす AWS Lambda 関数サンプル</title>
      <link>https://noid11.github.io/posts/lambda-kinesis-consumer-sample/</link>
      <pubDate>Tue, 19 Jan 2021 08:51:43 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/lambda-kinesis-consumer-sample/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Kinesis Data Streams に連携されるデータを確認したい場合等に使う&lt;/li&gt;
&lt;li&gt;ログの出力先等として Kinesis Data Streams に連携するサービスは結構存在するので、サクッと試す分にはマネジメントコンソールから編集可能な Python, Node.js 等を使うのが便利&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>go get コマンドのヘルプを読む</title>
      <link>https://noid11.github.io/posts/go-help-get/</link>
      <pubDate>Sat, 16 Jan 2021 12:10:06 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/go-help-get/</guid>
      <description>&lt;p&gt;&lt;code&gt;go get&lt;/code&gt; コマンドのヘルプ &lt;code&gt;go help get&lt;/code&gt; を読んだメモ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UUIDv4 を Go で生成する</title>
      <link>https://noid11.github.io/posts/generate-uuidv4-by-golang/</link>
      <pubDate>Sat, 16 Jan 2021 11:31:50 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/generate-uuidv4-by-golang/</guid>
      <description></description>
    </item>
    
    <item>
      <title>mktemp コマンド</title>
      <link>https://noid11.github.io/posts/mktemp-command/</link>
      <pubDate>Sat, 16 Jan 2021 08:56:33 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/mktemp-command/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;一時的なファイルやディレクトリを作成する mktemp コマンドについて調べたメモ&lt;/li&gt;
&lt;li&gt;一時的なディレクトリを作成して cd で移動しつつ作業する・・・といった事がサクッとできて便利&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;(mktemp -d)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Heroku CLI を使って Heroku Postgres をセットアップする方法</title>
      <link>https://noid11.github.io/posts/setup-heroku-postgres-by-heroku-cli/</link>
      <pubDate>Thu, 14 Jan 2021 02:29:30 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/setup-heroku-postgres-by-heroku-cli/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.heroku.com/postgres&#34;&gt;Heroku が提供するマネージドデータベースである Heroku Postgres&lt;/a&gt; を &lt;a href=&#34;https://devcenter.heroku.com/ja/articles/heroku-cli&#34;&gt;Heroku CLI&lt;/a&gt; からセットアップして接続するまでを試す手順&lt;/li&gt;
&lt;li&gt;Pros
&lt;ul&gt;
&lt;li&gt;PostgreSQL や SQL を学習したい時にサクッと使えて便利&lt;/li&gt;
&lt;li&gt;AWS Lambda 等ローカル環境の PostgreSQL が接続できない環境から、ちょっとしたデータベース接続を試したいような場合に便利
&lt;ul&gt;
&lt;li&gt;RDS よりも立ち上がりが速いし、無料&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.heroku.com/pricing&#34;&gt;無料の Hobby Dev プラン&lt;/a&gt;だと、レコード数 10 K と同時接続数 20 といった制限があるので注意&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Playwright を golang から使う</title>
      <link>https://noid11.github.io/posts/hello-playwright-with-golang/</link>
      <pubDate>Tue, 12 Jan 2021 14:51:07 +0900</pubDate>
      
      <guid>https://noid11.github.io/posts/hello-playwright-with-golang/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://playwright.dev/&#34;&gt;playwright&lt;/a&gt; を Go で使える &lt;a href=&#34;https://github.com/mxschmitt/playwright-go&#34;&gt;playwright-go&lt;/a&gt; を動かしたメモ&lt;/li&gt;
&lt;li&gt;build したバイナリには Chromium などのエンジンは含まれず、バイナリ実行時にダウンロードが発生する
&lt;ul&gt;
&lt;li&gt;なのでクロスコンパイルして動かしても、バイナリを動かす環境にブラウザエンジンを動かす共有ライブラリが無い場合、ブラウザの起動に失敗してエラーとなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
